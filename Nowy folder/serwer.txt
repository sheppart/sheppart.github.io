var http = require('http');
var WebSocketServer = require('websocket').server;

var server = http.createServer(function(request, response) {
	
});
server.listen(8080, "127.0.0.1", function() {
	console.log("Uruchomiono serwer!");
});

var wsServer = new WebSocketServer({
	httpServer: server
});

var handleClientMessage = function(messageData) {
	var msg = JSON.parse(messageData.utf8Data);
	if (msg.type == 'login') {
		var newLogin = msg.content;
		if (!userExists(newLogin)) {
			this.customData.username = newLogin;
			this.customData.account = 10.0;
			this.customData.price = 0.0;
			sendToOne(this, message('accept', null));
			sendToAll(message('msg', "Uzytkownik " + newLogin + " dolaczyl do gry"));
			sendToAll(message('refresh', guestList()));
		} else {
			sendToOne(this, message('reject', null));
		}
	}
	if (msg.type == 'buy') {
		initTrade(this);
	}
	if (msg.type == 'logout') {
		closeUser(this);
	}
};
var closeUser = function(conn) {
	if (conn.connected) {
		connections.splice(connections.indexOf(conn), 1);
		sendToAll(message('msg', 'Uzytkownik ' + conn.customData.username + ' rozlaczyl sie'));
		sendToAll(message('refresh', guestList()));
	}
};
var initTrade = function(conn) {
	conn.customData.price = basePrice;
	sendToOne(conn, message("buy_confirm", conn.customData.price));
	setTimeout(function() {
		var profit = basePrice - conn.customData.price;
		conn.customData.account += profit;
		conn.customData.price = 0.0;
		sendToOne(conn, message('account', conn.customData.account));
		sendToAll(message('refresh', guestList()));
	}, 5000);
};

var guestList = function() {
	var result = [];
	for (var i = 0; i < connections.length; i++) 
		if (connections[i].customData.username != null) 
			result.push( {
				'username': connections[i].customData.username,
				'account': connections[i].customData.account
			});
	return result;
};
var userExists = function(login) {
	for (var i = 0; i < connections.length; i++) {
		if (connections[i].customData.username == login)
			return true;
	}
	return false;
};
var message = function(type, content) {
	return { 
		'type': type,
		'content': content
	};
};

var sendToOne = function(conn, msg) {
	if (conn.connected)
		conn.sendUTF(JSON.stringify(msg));
};
var sendToAll = function(msg) {
	for (var i = 0; i < connections.length; i++)
		sendToOne(connections[i], msg);
};

var connections = [];

var closeClient = function(reasonCode, description) {
	closeUser(this);
};
wsServer.on('request', function(request) {
	var connection = request.accept("gielda", request.origin);
	connection.on('message', handleClientMessage);
	connection.on('close', closeClient);
	connection.customData = {};
	connections.push(connection);
});

var basePrice = 100.0;
var priceGenerator = function() {
	setTimeout(function() {
		basePrice += 0.1*(Math.random()-0.5);
		updatePrice(basePrice);
		priceGenerator();
	}, 100 + 200 * (Math.random()-0.2));
};
var updatePrice = function(price) {
	sendToAll(message('price', price));
};

priceGenerator();